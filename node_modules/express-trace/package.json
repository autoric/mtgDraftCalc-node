{
  "name": "express-trace",
  "version": "0.0.3",
  "description": "Express tracer and middleware profiler",
  "keywords": [
    "express",
    "trace",
    "profile"
  ],
  "author": {
    "name": "TJ Holowaychuk",
    "email": "tj@vision-media.ca"
  },
  "dependencies": {},
  "devDependencies": {
    "express": "2.5.x"
  },
  "main": "index",
  "engines": {
    "node": ">= 0.4.x < 0.8.0"
  },
  "readme": "\n# express-trace\n\n  Express tracer and middleware profiler.\n\n## Installation\n\n     $ npm install express-trace\n\n__NOTE__: supports express >= 2.3.5\n\n## Example\n\n Suppose we have the following express app with a few routes that can satisfy a url with the form `GET /user/NAME`, and some middlware\n\n    app.use(express.favicon());\n    app.use(express.bodyParser());\n    app.use(express.methodOverride());\n    app.use(express.cookieParser());\n    app.use(express.session({ secret: 'foo' }));\n    app.use(express.static(__dirname));\n\n    app.get('/user/:name', ensureUsername('tj'), function(req, res, next){\n      res.send('loaded tj');\n    });\n\n    app.get('/user/:name', function(req, res, next){\n      setTimeout(next, 1000);\n    });\n\n    app.get('/user/:name', function(req, res, next){\n      setTimeout(next, 200);\n    });\n\n    app.get('/user/tobi', function(req, res, next){\n      res.send('loaded tobi');\n    });\n\nall we need to do before we `listen()`, is `require()` express-trace and apply it to the app. This essentially wraps all of the middleware and routes with functions used for reporting.\n\n    require('express-trace')(app);\n\nstderr for `GET /user/tobi`:\n\n      GET /user/tobi\n      middleware / anonymous 1ms\n      middleware / favicon 0ms\n      middleware / bodyParser 0ms\n      middleware / methodOverride 0ms\n      middleware / cookieParser 0ms\n      middleware / session 1ms\n      middleware / static 0ms\n      middleware / router\n        app.get(/user/:name) 0ms\n          middleware ensureUsername 73ms\n        app.get(/user/:name) 1000ms\n        app.get(/user/:name) 200ms\n        app.get(/user/tobi) \n      responded to GET /user/tobi in 1279ms with 200 \"OK\"\n\n## License \n\n(The MIT License)\n\nCopyright (c) 2011 TJ Holowaychuk &lt;tj@vision-media.ca&gt;\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.",
  "readmeFilename": "Readme.md",
  "_id": "express-trace@0.0.3",
  "dist": {
    "shasum": "580534c6e1d817b60be368719381baec3e166e19"
  },
  "_from": "express-trace@0.0.3",
  "_resolved": "https://registry.npmjs.org/express-trace/-/express-trace-0.0.3.tgz"
}
